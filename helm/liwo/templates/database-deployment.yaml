apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.prefix }}-{{ .Values.database.name }}
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
{{- if not .Values.database.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
{{- if not .Values.RWS}}
  strategy:
   type: Recreate
{{- end}}
  selector:
    matchLabels:
      app: {{ .Values.prefix }}-{{ .Values.database.name }}
  template:
    metadata:
    {{- with .Values.database.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app: {{ .Values.prefix }}-{{ .Values.database.name }}
    spec:
      volumes:
        - name: google-cred
          secret:
            secretName: {{ .Values.prefix }}-google-secret         
        - name: database-volume
        {{- if .Values.RWS }}
          nfs:
            server: {{ .Values.nfs.server }}
            path: {{ .Values.nfs.path }}
        {{- else }}
          persistentVolumeClaim:
            claimName: {{ .Values.prefix }}-{{ default "pvc-database" .Values.database.volumeName }}
        {{- end }}
      containers:
        - name: {{ .Values.database.name }}
          image: "{{ .Values.images.database.repository }}:{{ .Values.images.database.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          ports:
            - containerPort: {{ .Values.database.service.port }}
          resources:
            {{- toYaml .Values.database.resources | nindent 12 }}
          env:
            {{- range .Values.database.environment_variables }}
            - name: {{ .key }}
              value: {{ .value }}
            {{- end }}
            - name: POSTGRES_USER
              value: "{{ .Values.database.postgres_user }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.database.postgres_password }}"
            - name: POSTGRES_DB
              value: "{{ .Values.database.postgres_db }}"
          volumeMounts:
            - name: database-volume
              mountPath: /docker-entrypoint-initdb.d
              subPath: database
      initContainers:
        - name: download-data
          image: "{{ .Values.images.init.repository }}:{{ .Values.images.init.tag }}"
          command: ['sh', '-c']
          args: ['test ! -f database/db.backup && mkdir database && echo "download database dump" && gsutil cp gs://liwo-data/{{ .Values.datasets.database.dump }} database/db.backup && gsutil cp gs://liwo-data/{{ .Values.datasets.database.init }} database/{{ .Values.datasets.database.init }}']
          workingDir: /data
          env:
            {{- range .Values.database.environment_variables_init }}
            - name: {{ .key }}
              value: {{ .value }}
            {{- end }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/root/creds/google_credentials.json"
          volumeMounts:
            - name: database-volume
              mountPath: /data
            - name: google-cred
              mountPath: "/root/creds"
              readOnly: true
