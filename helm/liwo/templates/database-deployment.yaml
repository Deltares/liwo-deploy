apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.prefix }}-{{ .Values.database.name }}
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
{{- if not .Values.database.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      app: {{ .Values.prefix }}-{{ .Values.database.name }}
  template:
    metadata:
    {{- with .Values.database.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app: {{ .Values.prefix }}-{{ .Values.database.name }}
    spec:
      volumes:        
        - name: database-volume
        {{- if .Values.RWS }}
          nfs:
            server: {{ .Values.nfs.server }}
            path: {{ .Values.nfs.path }}
        {{- else }}
          persistentVolumeClaim:
            claimName: {{ .Values.prefix }}-{{ default "pvc-database" .Values.database.volumeName }}
        {{- end }}
      containers:
        - name: {{ .Values.database.name }}
          image: "{{ .Values.images.database.repository }}:{{ .Values.images.database.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          ports:
            - containerPort: {{ .Values.database.service.port }}
          resources:
            {{- toYaml .Values.database.resources | nindent 12 }}
          env:
            {{- range .Values.database.environment_variables }}
            - name: {{ .key }}
              value: {{ .value }}
            {{- end }}
          volumeMounts:
            - name: database-volume
              mountPath: /docker-entrypoint-initdb.d
              subPath: database
            # - name: nfs-volume
            #   mountPath: /var/lib/postgresql/data
            #   subPath: database/data
      initContainers:
        - name: download-data
          image: eu.gcr.io/liwo-11205260-011/cloudsync
          command: ['sh', '-c']
          args: ['mkdir database; echo "download database dump"; gsutil cp gs://liwo-data/db_liwo.backup20201208 database/db.backup; gsutil cp gs://liwo-data/load-db.sh database/load-db.sh']
          workingDir: /data
          env:
            {{- range .Values.database.environment_variables_init }}
            - name: {{ .key }}
              value: {{ .value }}
            {{- end }}
          volumeMounts:
            - name: database-volume
              mountPath: /data
